<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
           xmlns="http://berlios.de/gpon/xmlscript" 
           targetNamespace="http://berlios.de/gpon/xmlscript" elementFormDefault="qualified">
	<!-- GponScript Document-->
	<xs:element name="GponScript" type="GponScript"/>
		<xs:complexType name="GponScript">
			<xs:sequence>
				<xs:element ref="Processing"/>
				<xs:choice maxOccurs="unbounded">
					<xs:group ref="DmlLikeGroup"/>
					<xs:group ref="SetLikeGroup"/>
					<xs:group ref="AssociationLikeGroup"/>
					<!-- Delete, Update -->
					<xs:group ref="VoidGroup"/>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>	<!-- Processing -->
		<xs:element name="Processing" type="Processing"/>
		<xs:complexType name="Processing">
			
			<xs:sequence>
				<xs:element ref="Commit"/>
				<xs:element ref="Results"/>
			</xs:sequence>
		</xs:complexType>
		
		<xs:element name="Commit">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="auto"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:element>
		<xs:element name="Results" type="Results"/>
		<xs:complexType name="Results">
			
			<xs:sequence>
				<xs:element ref="Smtp"/>
			</xs:sequence>
		</xs:complexType>	<!-- Smtp Address -->
		<xs:element name="Smtp" type="xs:string"/>
	
	<!--  DDL -->
		<xs:element name="CreateObjectType" type="CreateObjectType"/>
		<xs:complexType name="CreateObjectType">
			<xs:sequence>
				<xs:element ref="DeclareProperty"/>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string"/>
			<xs:attribute name="description" type="xs:string"/>
			<xs:attribute name="baseType" type="xs:string"/>
		</xs:complexType>
		<xs:element name="DeclareProperty" type="DeclareProperty"/>
		<xs:complexType name="DeclareProperty">
			
			<xs:attribute name="name" type="xs:string"/>
			<xs:attribute name="description" type="xs:string"/>
			<xs:attribute name="type" type="xs:string"/>
			<xs:attribute name="mandatory" type="xs:boolean"/>
			<xs:attribute name="rank" type="xs:integer"/>
		</xs:complexType>
		<xs:element name="RemoveObjectType" type="RemoveObjectType"/>
		<xs:complexType name="RemoveObjectType">
			
			<xs:attribute name="name" type="xs:string"/>
		</xs:complexType>
	
		
		<xs:element name="CreateAssociationType" type="CreateAssociationType"/>
		<xs:complexType name="CreateAssociationType">
			
			<xs:attribute name="name" type="xs:string"/>
			<xs:attribute name="description" type="xs:string"/>
			<xs:attribute name="multiplicity">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="OneToOne"/>
						<xs:enumeration value="OneToMany"/>
						<xs:enumeration value="ManyToMany"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="visibility">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="ab"/>
						<xs:enumeration value="ba"/>
						<xs:enumeration value="abba"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="typeOfA" type="xs:string"/>
			<xs:attribute name="roleOfA" type="xs:string"/>
			<xs:attribute name="typeOfB" type="xs:string"/>
			<xs:attribute name="roleOfB" type="xs:string"/>
		</xs:complexType>
	
		
		<xs:element name="RemoveAssociationType" type="RemoveAssociationType"/>
		<xs:complexType name="RemoveAssociationType">
			
			<xs:attribute name="name" type="xs:string"/>
		</xs:complexType>	
	<!--  DML constructs -->
		<xs:group name="DmlLikeGroup">
			<xs:choice>
				<xs:element ref="CreateObjectType"/>
				<xs:element ref="CreateAssociationType"/>
				<xs:element ref="RemoveObjectType"/>
				<xs:element ref="RemoveAssociationType"/>
			</xs:choice>
		</xs:group>
	
	<!--  Voids -->
		<xs:group name="VoidGroup">
			<xs:choice>
				<xs:element ref="Removal"/>
			</xs:choice>
		</xs:group>    <!-- Removal -->
		<xs:element name="Removal" type="Removal"/>
		<xs:complexType name="Removal">
			
			<xs:sequence>
				<xs:group ref="SetLikeGroup" minOccurs="1" maxOccurs="1"/>
			</xs:sequence>
		</xs:complexType>	
	<!-- non visible abstraction of a set like construct -->
		<xs:group name="SetLikeGroup">
			<xs:choice>
			<!-- set operations -->
				<xs:element ref="Union"/>
				<xs:element ref="Intersection"/>
				<xs:element ref="Difference"/>
			<!-- objects -->
				<xs:element ref="Query"/>
				<xs:element ref="Creation"/>
				<xs:element ref="Update"/>
				<xs:element ref="Reference"/>
			</xs:choice>
		</xs:group>
		<xs:group name="AssociationLikeGroup">
			<xs:choice>
			<!-- associations  -->
				<xs:element ref="Associate"/>
				<xs:element ref="Dissociate"/>
			</xs:choice>
		</xs:group>
	<!-- Union -->
		<xs:element name="Union" type="Union"/>
		<xs:complexType name="Union">
			
			<xs:sequence>
				<xs:group ref="SetLikeGroup" maxOccurs="50"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="optional"/>
		</xs:complexType>	<!-- Intersection -->
		<xs:element name="Intersection" type="Intersection"/>
		<xs:complexType name="Intersection">
			
			<xs:sequence>
				<xs:group ref="SetLikeGroup" maxOccurs="50"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="optional"/>
		</xs:complexType>	<!-- Difference -->
		<xs:element name="Difference" type="Difference"/>
		<xs:complexType name="Difference">
			
			<xs:sequence>
				<xs:group ref="SetLikeGroup" minOccurs="2" maxOccurs="2"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="optional"/>
		</xs:complexType>	<!-- Set Reference -->
		<xs:element name="Reference" type="Reference"/>
		<xs:complexType name="Reference">
			
			<xs:attribute name="refid">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>	<!-- Query -->
		<xs:element name="Query" type="Query"/>
		<xs:complexType name="Query">
			
			<xs:group ref="AssociatedExpr" minOccurs="0"/>
			<xs:attribute name="type" type="xs:string" use="required"/>
			<xs:attribute name="spec" type="xs:string" use="required"/>
			<xs:attribute name="id" type="xs:string"/>
		</xs:complexType>
		
		<xs:group name="AssociatedExpr">
			<xs:choice>
				<xs:element ref="Associated"/>
				<xs:element ref="Or"/>
				<xs:element ref="Xor"/>
				<xs:element ref="And"/>
				<xs:element ref="Not"/>
			</xs:choice>
		</xs:group>
		<xs:element name="And" type="And"/>
		<xs:complexType name="And">
			
			<xs:sequence>
				<xs:group ref="AssociatedExpr"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="optional"/>
		</xs:complexType>
		
		<xs:element name="Associated" type="Associated"/>
		<xs:complexType name="Associated">
			
			<xs:sequence>
				<xs:group ref="SetLikeGroup" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="by" type="xs:string" use="required"/>
			<xs:attribute name="role" type="xs:string" use="required"/>
			<xs:attribute name="id" type="xs:string" use="optional"/>
		</xs:complexType>	<!-- Creation -->
		<xs:element name="Creation" type="Creation"/>
		<xs:complexType name="Creation">
			
			<xs:sequence>
				<xs:element ref="OrUpdateUsingKeys"/>
				<xs:element ref="CreateObject" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="type" type="xs:string" use="required"/>
			<xs:attribute name="when" type="xs:string" use="required"/>
			<xs:attribute name="id" type="xs:string" use="required"/>
		</xs:complexType>
		
		<xs:element name="CreateObject" type="CreateObject"/>
		
		<xs:complexType name="CreateObject">
			<xs:sequence>
				<!-- Properties -->
				<xs:element ref="Property" maxOccurs="unbounded"/>
				<!-- Associated Objects -->
				<xs:element ref="AssociateWith" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
		
		<xs:element name="AssociateWith" type="AssociateWith"/>
		
		<xs:complexType name="AssociateWith">
			<xs:sequence>
				<xs:group ref="SetLikeGroup"/>
			</xs:sequence>
			<xs:attribute name="type" type="xs:string" use="required"/>
			<xs:attribute name="role" type="xs:string" use="required"/>
		</xs:complexType>
		
		<xs:element name="DissociateFrom" type="DissociateFrom"/>
		<xs:complexType name="DissociateFrom">
			
			<xs:sequence>
				<xs:group ref="SetLikeGroup"/>
			</xs:sequence>
			<xs:attribute name="type" type="xs:string" use="required"/>
			<xs:attribute name="role" type="xs:string" use="required"/>
		</xs:complexType>	<!-- Update -->
		<xs:element name="Update" type="Update"/>
		<xs:complexType name="Update">
			
			<xs:sequence>
				<xs:element ref="On"/>
				<xs:element ref="UpdateObject" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="type" type="xs:string" use="required"/>
			<xs:attribute name="id" type="xs:string" use="required"/>
		</xs:complexType>
		
		<xs:element name="UpdateObject" type="UpdateObject"/>
		<xs:complexType name="UpdateObject">
			
			<xs:sequence>
				<xs:element ref="Property"/>
			</xs:sequence>
		</xs:complexType>
		
		<xs:element name="Property" type="Property"/>
		<xs:complexType name="Property"
				mixed="true">
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attribute name="value" type="xs:string" use="optional"/>
			<xs:attribute name="id" type="xs:string" use="optional"/>
		</xs:complexType>	<!-- Associate Sets -->
		<xs:element name="Associate" type="Associate"/>
		<xs:complexType name="Associate">
			
			<xs:sequence>
				<xs:group ref="SetLikeGroup"/>
				<xs:element ref="AssociateWith"/>
			</xs:sequence>
		</xs:complexType>
		
		<xs:element name="Or" type="Or"/>
		<xs:complexType name="Or">
			
			<xs:sequence>
				<xs:group ref="AssociatedExpr"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="optional"/>
		</xs:complexType>
		
		<xs:element name="Xor" type="Xor"/>
		<xs:complexType name="Xor">
			
			<xs:sequence>
				<xs:group ref="AssociatedExpr"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="optional"/>
		</xs:complexType>
		
		<xs:element name="Not" type="Not"/>
		<xs:complexType name="Not">
			
			<xs:sequence>
				<xs:group ref="AssociatedExpr" maxOccurs="1"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="optional"/>
		</xs:complexType>
		
		<xs:element name="Dissociate" type="Dissociate"/>
		<xs:complexType name="Dissociate">
			
			<xs:sequence>
				<xs:group ref="SetLikeGroup"/>
				<xs:element ref="DissociateFrom"/>
			</xs:sequence>
		</xs:complexType>
		
		<xs:element name="Key" type="Key"/>
		<xs:complexType name="Key">
			
			<xs:attribute name="name" type="xs:string" use="required"/>
		</xs:complexType>
		
		<xs:element name="On" type="On"/>
		<xs:complexType name="On">
			
			<xs:sequence>
				<xs:element ref="Reference"/>
			</xs:sequence>
		</xs:complexType>
		
		<xs:element name="OrUpdateUsingKeys" type="OrUpdateUsingKeys"/>
		<xs:complexType name="OrUpdateUsingKeys">
			
			<xs:sequence>
				<xs:element ref="Key" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:schema>
